# This can be removed if we add this functionality to Zuul directly
- name: Load information from zuul_return
  when: buildset_registry is not defined
  set_fact:
    buildset_registry: "{{ (lookup('file', zuul.executor.work_root + '/results.json') | from_json)['buildset_registry'] }}"
  ignore_errors: true
- name: Build a docker image
  command: >-
    docker build {{ item.path | default('.') }} -f {{ item.dockerfile | default(docker_dockerfile) }}
    {% if item.target | default(false) -%}
      --target {{ item.target }}
    {% endif -%}
    {% for build_arg in item.build_args | default([]) -%}
      --build-arg {{ build_arg }}
    {% endfor -%}
    --tag {{ item.repository }}:change_{{ zuul.change }}
    {% for tag in item.tags | default(['latest']) -%}
    --tag {{ item.repository }}:{{ tag }}
    {% endfor -%}
  args:
    chdir: "{{ zuul_work_dir }}/{{ item.context }}"
  loop: "{{ docker_images }}"
- name: Push image to buildset registry
  when: buildset_registry is defined
  include_tasks: push.yaml
  loop: "{{ docker_images }}"
  loop_control:
    loop_var: image
